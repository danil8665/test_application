{"ast":null,"code":"var _jsxFileName = \"/Users/danil8665/Desktop/test exercise/myapp/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { done, inProgress, toDo } from '../redux/issues';\nimport { useAppSelector } from '../redux/hooks';\nimport Drag from './Drag';\n\n// const { Header, Content, Footer } = Layout;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // const [text, setText] = useState('');  \n\n  const getIssues = async repoUrl => {\n    const urlParts = repoUrl.split('/');\n    const owner = urlParts[3];\n    const repo = urlParts[4];\n    const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues?state=all`);\n    const issues = await response.json();\n    dispatch(toDo([issues.filter(item => item.state === \"open\" && !!!item.assignee)]));\n    dispatch(inProgress([issues.filter(item => item.state === \"open\" && !!item.assignee === true)]));\n    dispatch(done([issues.filter(item => item.state === \"closed\")]));\n    console.log(toDoState.toDo);\n    console.log(inProgressState.inProgress);\n    console.log(doneState.done);\n    return issues;\n  };\n  const dispatch = useDispatch();\n  const toDoState = useAppSelector(state => state.issues.value);\n  const inProgressState = useAppSelector(state => state.issues.value);\n  const doneState = useAppSelector(state => state.issues.value);\n\n  //   const {\n  //     token: { colorBgContainer },\n  //   } = theme.useToken();\n\n  return (\n    /*#__PURE__*/\n    // <Layout>\n    // <Header>\n    // </Header>\n    // <Content className=\"site-layout\" style={{ padding: '0 50px' }}>\n    //   <Breadcrumb style={{ margin: '16px 0' }}>\n    //     <Breadcrumb.Item>...</Breadcrumb.Item>\n    //     <Breadcrumb.Item>...</Breadcrumb.Item>\n    //   </Breadcrumb>\n    //   <div style={{ padding: 24, background: colorBgContainer }}>\n    //   <Space.Compact style={{ width: '100%' }}>\n    //   <Input \n    //     autoFocus\n    //     type={\"text\"}\n    //     value={text}\n    //     onChange={(e:any) => {\n    //       setText(e.target.value);\n    //     }}\n    //     defaultValue=\"Combine input and button\" \n    //   />\n    //   <Button onClick={() => getIssues(text)} type=\"primary\">Load</Button>\n    // </Space.Compact>\n    // <br/>\n    // <br/>\n    _jsxDEV(Drag, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Home, \"Mc+DJ5aqzPQU9BPkOHSwvN08Ojw=\", false, function () {\n  return [useDispatch, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = Home;\n{/* </div>\n </Content>\n <Footer style={{ textAlign: 'center' }}>Ant Design ©2023 Created by Ant UED</Footer>\n </Layout> */}\nexport default Home;\n{/* <div className=\"board\">\n  <div className=\"board_title\">\n    ToDo\n  </div>\n  <div className=\"item\">\n    Пойти в магаз\n  </div>\n </div>\n  <div className=\"board\">\n    <div className=\"board_title\">\n      In Progress\n    </div>\n    <div className=\"item\">\n      Сделать дз\n    </div>\n    </div>\n    <div className=\"board\">\n      <div className=\"board_title\">\n        Done\n      </div>\n      <div className=\"item\">\n        Покушать\n      </div>\n    </div> */}\n{/* <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n    >\n      <Container>\n        <TaskColumnStyles>\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <Droppable key={columnId} droppableId={columnId}>\n                {(provided, snapshot) => (\n                  <TaskList\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    <Title>{column.title}</Title>\n                    {column.items.map((item: any, index: any) => (\n                      <TaskCard key={item} item={item} index={index} />\n                    ))}\n                    {provided.placeholder}\n                  </TaskList>\n                )}\n              </Droppable>\n            );\n          })}\n        </TaskColumnStyles>\n      </Container>\n    </DragDropContext> */}\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useDispatch","done","inProgress","toDo","useAppSelector","Drag","jsxDEV","_jsxDEV","Home","_s","getIssues","repoUrl","urlParts","split","owner","repo","response","fetch","issues","json","dispatch","filter","item","state","assignee","console","log","toDoState","inProgressState","doneState","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danil8665/Desktop/test exercise/myapp/src/components/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Breadcrumb, Button, Input, Layout, Space, theme } from 'antd';\nimport { Octokit } from '@octokit/rest';\nimport { useDispatch } from 'react-redux';\nimport { done, inProgress, toDo } from '../redux/issues';\nimport { useSelector } from 'react-redux';\nimport { useAppSelector, useAppDispatch } from '../redux/hooks'\nimport { v4 as uuidv4 } from 'uuid';\nimport Drag from './Drag';\n\n\n// const { Header, Content, Footer } = Layout;\n\nconst Home = () => {\n  // const [text, setText] = useState('');  \n\n  const getIssues = async (repoUrl: string) => {\n    const urlParts = repoUrl.split('/');\n    const owner = urlParts[3];\n    const repo = urlParts[4];\n    const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues?state=all`);\n    const issues = await response.json();\n    dispatch(toDo([issues.filter((item:any) => item.state === \"open\" && !!!item.assignee)]))\n    dispatch(inProgress([issues.filter((item:any) => item.state === \"open\" && !!item.assignee === true)]))\n    dispatch(done([issues.filter((item:any) => item.state === \"closed\")]))\n    console.log(toDoState.toDo)\n    console.log(inProgressState.inProgress)\n    console.log(doneState.done)\n    return issues;\n  }\n  const dispatch = useDispatch();\n  const toDoState = useAppSelector((state) => state.issues.value)\n  const inProgressState = useAppSelector((state) => state.issues.value)\n  const doneState = useAppSelector((state) => state.issues.value)\n  \n//   const {\n//     token: { colorBgContainer },\n//   } = theme.useToken();\n\n  return (\n    // <Layout>\n    // <Header>\n\n    // </Header>\n    // <Content className=\"site-layout\" style={{ padding: '0 50px' }}>\n    //   <Breadcrumb style={{ margin: '16px 0' }}>\n    //     <Breadcrumb.Item>...</Breadcrumb.Item>\n    //     <Breadcrumb.Item>...</Breadcrumb.Item>\n    //   </Breadcrumb>\n    //   <div style={{ padding: 24, background: colorBgContainer }}>\n    //   <Space.Compact style={{ width: '100%' }}>\n    //   <Input \n    //     autoFocus\n    //     type={\"text\"}\n    //     value={text}\n    //     onChange={(e:any) => {\n    //       setText(e.target.value);\n    //     }}\n    //     defaultValue=\"Combine input and button\" \n    //   />\n    //   <Button onClick={() => getIssues(text)} type=\"primary\">Load</Button>\n    // </Space.Compact>\n    // <br/>\n    // <br/>\n        <Drag/>\n\n\n  );\n};\n\n    {/* </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Ant Design ©2023 Created by Ant UED</Footer>\n  </Layout> */}\nexport default Home;\n\n          {/* <div className=\"board\">\n            <div className=\"board_title\">\n              ToDo\n            </div>\n            <div className=\"item\">\n              Пойти в магаз\n            </div>\n          </div>\n            <div className=\"board\">\n              <div className=\"board_title\">\n                In Progress\n              </div>\n              <div className=\"item\">\n                Сделать дз\n              </div>\n              </div>\n              <div className=\"board\">\n                <div className=\"board_title\">\n                  Done\n                </div>\n                <div className=\"item\">\n                  Покушать\n                </div>\n              </div> */}\n\n{/* <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n    >\n      <Container>\n        <TaskColumnStyles>\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <Droppable key={columnId} droppableId={columnId}>\n                {(provided, snapshot) => (\n                  <TaskList\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    <Title>{column.title}</Title>\n                    {column.items.map((item: any, index: any) => (\n                      <TaskCard key={item} item={item} index={index} />\n                    ))}\n                    {provided.placeholder}\n                  </TaskList>\n                )}\n              </Droppable>\n            );\n          })}\n        </TaskColumnStyles>\n      </Container>\n    </DragDropContext> */}"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AAKvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,EAAEC,UAAU,EAAEC,IAAI,QAAQ,iBAAiB;AAExD,SAASC,cAAc,QAAwB,gBAAgB;AAE/D,OAAOC,IAAI,MAAM,QAAQ;;AAGzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;;EAEA,MAAMC,SAAS,GAAG,MAAOC,OAAe,IAAK;IAC3C,MAAMC,QAAQ,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;IACnC,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC;IACzB,MAAMG,IAAI,GAAGH,QAAQ,CAAC,CAAC,CAAC;IACxB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,KAAM,IAAGC,IAAK,mBAAkB,CAAC;IAC9F,MAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpCC,QAAQ,CAACjB,IAAI,CAAC,CAACe,MAAM,CAACG,MAAM,CAAEC,IAAQ,IAAKA,IAAI,CAACC,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxFJ,QAAQ,CAAClB,UAAU,CAAC,CAACgB,MAAM,CAACG,MAAM,CAAEC,IAAQ,IAAKA,IAAI,CAACC,KAAK,KAAK,MAAM,IAAI,CAAC,CAACD,IAAI,CAACE,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IACtGJ,QAAQ,CAACnB,IAAI,CAAC,CAACiB,MAAM,CAACG,MAAM,CAAEC,IAAQ,IAAKA,IAAI,CAACC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtEE,OAAO,CAACC,GAAG,CAACC,SAAS,CAACxB,IAAI,CAAC;IAC3BsB,OAAO,CAACC,GAAG,CAACE,eAAe,CAAC1B,UAAU,CAAC;IACvCuB,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC5B,IAAI,CAAC;IAC3B,OAAOiB,MAAM;EACf,CAAC;EACD,MAAME,QAAQ,GAAGpB,WAAW,EAAE;EAC9B,MAAM2B,SAAS,GAAGvB,cAAc,CAAEmB,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACY,KAAK,CAAC;EAC/D,MAAMF,eAAe,GAAGxB,cAAc,CAAEmB,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACY,KAAK,CAAC;EACrE,MAAMD,SAAS,GAAGzB,cAAc,CAAEmB,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACY,KAAK,CAAC;;EAEjE;EACA;EACA;;EAEE;IAAA;IACE;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIvB,OAAA,CAACF,IAAI;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;AAIf,CAAC;AAACzB,EAAA,CAvDID,IAAI;EAAA,QAiBSR,WAAW,EACVI,cAAc,EACRA,cAAc,EACpBA,cAAc;AAAA;AAAA+B,EAAA,GApB5B3B,IAAI;AAyDN,CAAC;AACL;AACA;AACA,aAHK;AAIL,eAAeA,IAAI;AAET,CAAC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAvBW;AAyBX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAzBC;AAyByB,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}