{"ast":null,"code":"var _jsxFileName = \"/Users/danil8665/Desktop/test exercise/myapp/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Breadcrumb, Button, Input, Layout, Space, theme } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { done, inProgress, toDo } from '../redux/issues';\nimport { useAppSelector } from '../redux/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst Home = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [owner, setOwner] = useState('');\n  const [repo, setRepo] = useState('');\n  const [comments, setComments] = useState('');\n  const columns = [{\n    id: 'column1',\n    title: 'ToDo'\n  }, {\n    id: 'column2',\n    title: 'In Progress'\n  }, {\n    id: 'column3',\n    title: 'Done'\n  }];\n\n  // const initialItems: ItemType[] = [\n  //   { id: 1, name: 'Item 1', column: 'column1' },\n  //   { id: 2, name: 'Item 2', column: 'column1' },\n  //   { id: 3, name: 'Item 3', column: 'column1' },\n  //   { id: 4, name: 'Item 4', column: 'column2' },\n  //   { id: 5, name: 'Item 5', column: 'column2' },\n  //   { id: 6, name: 'Item 6', column: 'column2' },\n  //   { id: 7, name: 'Item 7', column: 'column3' },\n  //   { id: 8, name: 'Item 8', column: 'column3' },\n  //   { id: 9, name: 'Item 9', column: 'column3' },\n  // ];\n\n  const handleResetText = () => {\n    setText('');\n  };\n  const getIssues = async repoUrl => {\n    const urlParts = repoUrl.split('/');\n    const owner = urlParts[3];\n    const repo = urlParts[4];\n    setOwner(owner);\n    setRepo(repo);\n    const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues?state=all`);\n    const issues = await response.json();\n    dispatch(toDo([issues.filter(item => item.state === \"open\" && !!!item.assignee)]));\n    dispatch(inProgress([issues.filter(item => item.state === \"open\" && !!item.assignee === true)]));\n    dispatch(done([issues.filter(item => item.state === \"closed\")]));\n    console.log(toDoState);\n    console.log(inProgressState);\n    console.log(doneState);\n    return issues;\n  };\n  const dispatch = useDispatch();\n  const toDoState = useAppSelector(state => state.issues.value.toDo);\n  const inProgressState = useAppSelector(state => state.issues.value.inProgress);\n  const doneState = useAppSelector(state => state.issues.value.done);\n  const initialItems = [...toDoState.map(item => ({\n    ...item.title,\n    column: 'column1'\n  })), ...inProgressState.map(item => ({\n    ...item.title,\n    column: 'column2'\n  })), ...doneState.map(item => ({\n    ...item.title,\n    column: 'column3'\n  }))];\n  const [items, setItems] = useState(initialItems);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const {\n    token: {\n      colorBgContainer\n    }\n  } = theme.useToken();\n  const handleDragStart = (e, item) => {\n    setDraggedItem(item);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(e.currentTarget, 20, 20);\n  };\n  const handleDragOver = (e, columnId, index) => {\n    e.preventDefault();\n    if (draggedItem === null) {\n      return;\n    }\n    if (draggedItem.column === columnId) {\n      const updatedItems = [...items];\n      updatedItems.splice(updatedItems.indexOf(draggedItem), 1);\n      updatedItems.splice(index, 0, draggedItem);\n      setItems(updatedItems);\n    } else {\n      const updatedItems = items.map(item => item.id === draggedItem.id ? {\n        ...item,\n        column: columnId\n      } : item);\n      setItems(updatedItems);\n    }\n  };\n  const handleTest = (e, index, id) => {\n    console.log(e.target);\n  };\n  const handleDrop = () => {\n    if (draggedItem !== null) {\n      const updatedItems = [...items];\n      const draggedItemIndex = updatedItems.findIndex(item => item.id === draggedItem.id);\n      updatedItems[draggedItemIndex] = {\n        ...draggedItem\n      };\n      setItems(updatedItems);\n    }\n    setDraggedItem(null);\n  };\n  const handleDragEnd = () => {\n    setDraggedItem(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GitHub Kanban Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      className: \"site-layout\",\n      style: {\n        padding: '0 50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        style: {\n          margin: '16px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: repo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 24,\n          background: colorBgContainer\n        },\n        children: [/*#__PURE__*/_jsxDEV(Space.Compact, {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            autoFocus: true,\n            id: \"link\",\n            type: \"text\",\n            value: text,\n            onChange: e => {\n              setText(e.target.value);\n            },\n            defaultValue: \"Combine input and button\",\n            placeholder: \"Enter the link to the repo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => getIssues(text),\n            type: \"primary\",\n            children: \"Load issues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-board\",\n          children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kanban-dropzone\",\n              onDragOver: e => handleDragOver(e, column.id, index),\n              onDrop: e => e.preventDefault(),\n              onDragEnter: e => e.preventDefault(),\n              children: items.filter(item => item.column === column.id).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"kanban-item\",\n                draggable: true,\n                onDragStart: e => handleDragStart(e, item),\n                onDragOver: e => handleTest(e, index, item.id),\n                onDragEnd: () => setDraggedItem(null),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 11\n            }, this)]\n          }, column.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Ant Design \\xA92023 Created by Filatov Danylo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"NWRnvTVNI+I2Ybnl3wvq0APeVYA=\", false, function () {\n  return [useDispatch, useAppSelector, useAppSelector, useAppSelector, theme.useToken];\n});\n_c = Home;\nexport default Home;\n{/* <div className=\"board\">\n  <div className=\"board_title\">\n    ToDo\n  </div>\n  <div className=\"item\">\n    Пойти в магаз\n  </div>\n </div>\n  <div className=\"board\">\n    <div className=\"board_title\">\n      In Progress\n    </div>\n    <div className=\"item\">\n      Сделать дз\n    </div>\n    </div>\n    <div className=\"board\">\n      <div className=\"board_title\">\n        Done\n      </div>\n      <div className=\"item\">\n        Покушать\n      </div>\n    </div> */}\n{/* <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n    >\n      <Container>\n        <TaskColumnStyles>\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <Droppable key={columnId} droppableId={columnId}>\n                {(provided, snapshot) => (\n                  <TaskList\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    <Title>{column.title}</Title>\n                    {column.items.map((item: any, index: any) => (\n                      <TaskCard key={item} item={item} index={index} />\n                    ))}\n                    {provided.placeholder}\n                  </TaskList>\n                )}\n              </Droppable>\n            );\n          })}\n        </TaskColumnStyles>\n      </Container>\n    </DragDropContext> */}\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Breadcrumb","Button","Input","Layout","Space","theme","useDispatch","done","inProgress","toDo","useAppSelector","jsxDEV","_jsxDEV","Header","Content","Footer","Home","_s","text","setText","owner","setOwner","repo","setRepo","comments","setComments","columns","id","title","handleResetText","getIssues","repoUrl","urlParts","split","response","fetch","issues","json","dispatch","filter","item","state","assignee","console","log","toDoState","inProgressState","doneState","value","initialItems","map","column","items","setItems","draggedItem","setDraggedItem","token","colorBgContainer","useToken","handleDragStart","e","dataTransfer","effectAllowed","setDragImage","currentTarget","handleDragOver","columnId","index","preventDefault","updatedItems","splice","indexOf","handleTest","target","handleDrop","draggedItemIndex","findIndex","handleDragEnd","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","margin","Item","background","Compact","width","autoFocus","type","onChange","defaultValue","placeholder","onClick","onDragOver","onDrop","onDragEnter","draggable","onDragStart","onDragEnd","name","textAlign","_c","$RefreshReg$"],"sources":["/Users/danil8665/Desktop/test exercise/myapp/src/components/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Breadcrumb, Button, Form, Input, Layout, Space, theme } from 'antd';\nimport { Octokit } from '@octokit/rest';\nimport { useDispatch } from 'react-redux';\nimport { done, inProgress, toDo } from '../redux/issues';\nimport { useSelector } from 'react-redux';\nimport { useAppSelector, useAppDispatch } from '../redux/hooks'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst { Header, Content, Footer } = Layout;\n\ntype ItemType = {\n  title: any;\n  id: number;\n  name: string;\n  column: string;\n};\n\ntype ColumnType = {\n  id: string;\n  title: string;\n};\n\n\nconst Home = () => {\n  const [text, setText] = useState('');  \n  const [owner, setOwner] = useState('');\n  const [repo, setRepo] = useState('');\n  const [comments, setComments] = useState('')\n  \n\n  const columns: ColumnType[] = [\n    { id: 'column1', title: 'ToDo' },\n    { id: 'column2', title: 'In Progress' },\n    { id: 'column3', title: 'Done' },\n  ];\n\n  // const initialItems: ItemType[] = [\n  //   { id: 1, name: 'Item 1', column: 'column1' },\n  //   { id: 2, name: 'Item 2', column: 'column1' },\n  //   { id: 3, name: 'Item 3', column: 'column1' },\n  //   { id: 4, name: 'Item 4', column: 'column2' },\n  //   { id: 5, name: 'Item 5', column: 'column2' },\n  //   { id: 6, name: 'Item 6', column: 'column2' },\n  //   { id: 7, name: 'Item 7', column: 'column3' },\n  //   { id: 8, name: 'Item 8', column: 'column3' },\n  //   { id: 9, name: 'Item 9', column: 'column3' },\n  // ];\n\n  const handleResetText = () => {\n    setText('');\n  }\n\n  const getIssues = async (repoUrl: string) => {\n    const urlParts = repoUrl.split('/');\n    const owner = urlParts[3];\n    const repo = urlParts[4];\n    setOwner(owner);\n    setRepo(repo);\n    const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues?state=all`);\n    const issues = await response.json();\n    dispatch(toDo([issues.filter((item:any) => item.state === \"open\" && !!!item.assignee)]))\n    dispatch(inProgress([issues.filter((item:any) => item.state === \"open\" && !!item.assignee === true)]))\n    dispatch(done([issues.filter((item:any) => item.state === \"closed\")]))\n    console.log(toDoState)\n    console.log(inProgressState)\n    console.log(doneState)\n    return issues;\n  }\n\n  const dispatch = useDispatch();\n  const toDoState = useAppSelector((state) => state.issues.value.toDo) as unknown as ItemType[];\n  const inProgressState = useAppSelector((state) => state.issues.value.inProgress) as unknown as ItemType[];\n  const doneState = useAppSelector((state) => state.issues.value.done) as unknown as ItemType[];\n  \n  const initialItems: ItemType[] = [\n    ...toDoState.map((item) => ({ ...item.title, column: 'column1' })),\n    ...inProgressState.map((item) => ({ ...item.title, column: 'column2' })),\n    ...doneState.map((item) => ({ ...item.title, column: 'column3' })),\n  ];\n\n  const [items, setItems] = useState<ItemType[]>(initialItems);\n  const [draggedItem, setDraggedItem] = useState<ItemType | null>(null);\n  \n  const {\n    token: { colorBgContainer },\n  } = theme.useToken();\n\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, item: ItemType) => {\n    setDraggedItem(item);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(e.currentTarget, 20, 20);\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>, columnId: string, index: number) => {\n    e.preventDefault();\n    if (draggedItem === null) {\n      return;\n    }\n    if (draggedItem.column === columnId) {\n      const updatedItems = [...items];\n      updatedItems.splice(updatedItems.indexOf(draggedItem), 1);\n      updatedItems.splice(index, 0, draggedItem);\n      setItems(updatedItems);\n    } else {\n      const updatedItems = items.map((item) =>\n        item.id === draggedItem.id ? { ...item, column: columnId } : item\n      );\n      setItems(updatedItems);\n    }\n  };\n  \n  const handleTest = (e: React.DragEvent, index: number, id: number) => {\n    console.log(e.target)\n  }  \n\n  const handleDrop = () => {\n    if (draggedItem !== null) {\n      const updatedItems = [...items];\n      const draggedItemIndex = updatedItems.findIndex(item => item.id === draggedItem.id);\n      updatedItems[draggedItemIndex] = { ...draggedItem };\n      setItems(updatedItems);\n    }\n    setDraggedItem(null);\n  };\n  \n\n  const handleDragEnd = () => {\n    setDraggedItem(null);\n  };\n\n  return (\n    <Layout>\n    <Header>\n      <div\n        className='logo'\n      >\n        <h1>GitHub Kanban Board</h1>\n      </div>\n    </Header>\n    <Content className=\"site-layout\" style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>{owner}</Breadcrumb.Item>\n        <Breadcrumb.Item>{repo}</Breadcrumb.Item>\n      </Breadcrumb>\n      <div style={{ padding: 24, background: colorBgContainer }}>\n      <Space.Compact style={{ width: '100%' }}>\n      <Input \n        autoFocus\n        id='link'\n        type={\"text\"}\n        value={text}\n        onChange={(e:any) => {\n          setText(e.target.value);\n        }}\n        defaultValue=\"Combine input and button\" \n        placeholder='Enter the link to the repo'\n      />\n      <Button onClick={() => getIssues(text)} type=\"primary\">Load issues</Button>\n    </Space.Compact>\n    <br/>\n    <br/>\n    <div className=\"kanban-board\">\n      {columns.map((column, index) => (\n        <div key={column.id} className=\"kanban-column\">\n          <h2>{column.title}</h2>\n          <div\n            className=\"kanban-dropzone\"\n            onDragOver={(e) => handleDragOver(e, column.id, index)}\n            onDrop={(e) => e.preventDefault()}\n            onDragEnter={(e) => e.preventDefault()}\n          >\n            {items\n              .filter((item) => item.column === column.id)\n              .map((item, index) => (\n                <div\n                  key={item.id}\n                  className=\"kanban-item\"\n                  draggable\n                  onDragStart={(e) => handleDragStart(e, item)}\n                  onDragOver={(e) => handleTest(e, index, item.id)}\n                  onDragEnd={() => setDraggedItem(null)}\n                >\n                  {item.name}\n                </div>\n              ))}\n          </div>\n        </div>\n      ))}\n    </div>\n    </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Ant Design ©2023 Created by Filatov Danylo</Footer>\n  </Layout>\n\n  );\n}\nexport default Home;\n\n          {/* <div className=\"board\">\n            <div className=\"board_title\">\n              ToDo\n            </div>\n            <div className=\"item\">\n              Пойти в магаз\n            </div>\n          </div>\n            <div className=\"board\">\n              <div className=\"board_title\">\n                In Progress\n              </div>\n              <div className=\"item\">\n                Сделать дз\n              </div>\n              </div>\n              <div className=\"board\">\n                <div className=\"board_title\">\n                  Done\n                </div>\n                <div className=\"item\">\n                  Покушать\n                </div>\n              </div> */}\n\n{/* <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n    >\n      <Container>\n        <TaskColumnStyles>\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <Droppable key={columnId} droppableId={columnId}>\n                {(provided, snapshot) => (\n                  <TaskList\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    <Title>{column.title}</Title>\n                    {column.items.map((item: any, index: any) => (\n                      <TaskCard key={item} item={item} index={index} />\n                    ))}\n                    {provided.placeholder}\n                  </TaskList>\n                )}\n              </Droppable>\n            );\n          })}\n        </TaskColumnStyles>\n      </Container>\n    </DragDropContext> */}"],"mappings":"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"},"metadata":{},"sourceType":"module"}